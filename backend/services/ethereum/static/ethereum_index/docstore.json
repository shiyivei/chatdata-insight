{"docstore/metadata": {"f0647966-728c-4e9e-bd38-6b40800ace6b": {"doc_hash": "c3e6a70602b01ec3ccceea52454e77f05f6420872b003915f85afedea239cb0f"}, "67022844-37dd-4c79-905f-77d53592fcb1": {"doc_hash": "7d82e60874be281de5221928459c2aaf2a74ef22759afcbb1a6914b2eea40996"}, "2e4eaf95-40c6-4d19-9037-8a7d8df08394": {"doc_hash": "ae980da1994fb6ff3aa16d4f996a25e3c012cc9bd11c94a2b750f3c8307f66ec"}, "f27af1b0-289b-4bcf-ba90-f884269b96ab": {"doc_hash": "56cf493bb94233f90ecae58a9b16e21178cd763073cc8fed7fd030ae0987835a"}, "504b7268-6525-4eec-b932-ccb5ccc54132": {"doc_hash": "757866c01015c959e47ca4c24aa6c0696c6bd2e88d353aeadff2969908f57a14"}, "a1807149-d27c-4090-95d7-a79f0fbd237d": {"doc_hash": "2dc6a998d6db5ac60d12b0d7732fb8edfd3a5e4d05317b0541e83e73dfaa7f62"}, "026924b9-89ca-4417-8efa-83df728577ab": {"doc_hash": "2bc196aab90155c1be9f9ca8e44807dd2a69a21889df380de7ef2de3dddd5ed9"}, "d83abcb6-a23d-40d3-a959-4f6441f4fb4f": {"doc_hash": "a5de9ee937e632437b9c9330025a7ce9dffde9ce9412a3cd14912df79a443665"}, "728c9b5d-d59a-4f92-9c0f-9b00000d0a4b": {"doc_hash": "f9ed902ef11cf701585438a6d43ae55fc5c00a33cb60a6a415ecfaa9803fc60c"}, "5056dcb0-81b4-47b8-9d8c-0d373d2e9dd8": {"doc_hash": "bdec57b9c59fa3d286d704cd90654d3833b37a234fd2f4a8f302fcc803a73326"}, "2d73b640-6d32-48f6-9735-b79ee84b876a": {"doc_hash": "59fc096ef6a0c7b67045d156a95407a95ca8b267269bb1afd80a95cc7cdbebfc"}, "9a1660c9-27dd-4152-8757-8a01c6991441": {"doc_hash": "bdf77728bf1d5e0eb54e9e32325f7f2838667cf2e4a0c7436f5664562a8effda"}, "4bb8fa8e-b246-4c21-84da-71b5b9b15115": {"doc_hash": "700c4a369ee9720a4223bdca347a2ecdc652a38dbfa4789e9883d32c554d2171"}}, "docstore/data": {"2e4eaf95-40c6-4d19-9037-8a7d8df08394": {"__data__": {"text": "When answering questions, \nyou need to follow the data types defined in the schema and ensure that the fields used in your query statement exist in the types defined in the schema. \nFor example, if there is a type called Wallet that has only one field named tokenBalance and no field named balance, \nyou cannot define a field named balance when answering questions. \nYou need to follow the types defined in the schema layer by layer and only use the fields defined in the schema to answer questions.\nIf the question does not explicitly specify a field, you need to summarize the closest field based on the question, and then provide an answer.\n\nexample 1: \n\nquestions: \n\u67e5\u4e00\u4e0b\u8fd9\u4e2a\u5408\u7ea6: 0xf2A22B900dde3ba18Ec2AeF67D4c8C1a0DAB6aAC \nExamine this contract: 0xf2A22B900dde3ba18Ec2AeF67D4c8C1a0DAB6aAC.\n\nanswer: \n\nquery Query($contractAddress: String!) {\n     ethereum {\n          contract(contractAddress: $contractAddress) {\n               address\n               name\n               symbol\n               supportedErcInterfaces\n               isVerified\n          }\n     }\n}\n\n            \nvariables = {\n    \"contractAddress\": \"0xf2A22B900dde3ba18Ec2AeF67D4c8C1a0DAB6aAC\"\n}\n\n\n\nexample 2:\n\nquestion: \nPlease check what is the ENS associated with the account 0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B\n\nanswer:\n\nquery Query($address: String!) {\n     ethereum {\n          walletByAddress(address: $address) {\n               ensName\n          }\n     }\n}\n    \nvariables = {\n    \"address\": \"0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B\"\n}\n\nexample 3:\n\nquestion: \nHow many trend collections are there?\n\n\nanswer:\n\n     query Query {\n          ethereum {\n               trendingCollections {\n                    totalCount\n               }\n          }\n     }\n\n            \nvariables = {}\n\nexample 4:\n\nquestion: \nlookup details of transaction 0x2aacd75331374679e82001424fe817ee08085ca12356dd84bd49739bef8bbf9f\n\nanswer:\n\nquery Query($hash: String!) {\n          ethereum {\n               transaction(hash: $hash) {\n                    blockNumber\n                    blockTimestamp\n               }\n          }\n     }\n\nvariables = {\n    'hash':\"0x2aacd75331374679e82001424fe817ee08085ca12356dd84bd49739bef8bbf9f\"\n}\n\na wrong example: please try to understand this point\n\nquestion: \nPlease", "doc_id": "2e4eaf95-40c6-4d19-9037-8a7d8df08394", "embedding": null, "doc_hash": "ae980da1994fb6ff3aa16d4f996a25e3c012cc9bd11c94a2b750f3c8307f66ec", "extra_info": null, "node_info": {"start": 0, "end": 2261}, "relationships": {"1": "f0647966-728c-4e9e-bd38-6b40800ace6b", "3": "f27af1b0-289b-4bcf-ba90-f884269b96ab"}}, "__type__": "1"}, "f27af1b0-289b-4bcf-ba90-f884269b96ab": {"__data__": {"text": "Query($hash: String!) {\n          ethereum {\n               transaction(hash: $hash) {\n                    blockNumber\n                    blockTimestamp\n               }\n          }\n     }\n\nvariables = {\n    'hash':\"0x2aacd75331374679e82001424fe817ee08085ca12356dd84bd49739bef8bbf9f\"\n}\n\na wrong example: please try to understand this point\n\nquestion: \nPlease check the balance of this account address: 0x668e8A0DB87FA6ce64B2e13eD12a3981f59ef418\n\nwrong answer:\n\nquery Query($address: String!) {\n     ethereum {\n          walletByAddress(address: $address) {\n               balance\n          }\n     }\n}\n\n\n\nvariables = {\n    \"address\": \"0x668e8A0DB87FA6ce64B2e13eD12a3981f59ef418\"\n}\n\nright answer:\n\nquery Query($address: String!) {\n     ethereum {\n          walletByAddress(address: $address) {\n               address\n               tokenBalances {\n                    totalCount\n               }\n          }\n     }\n}\n\nvariables = {\n    \"address\": \"0x668e8A0DB87FA6ce64B2e13eD12a3981f59ef418\"\n}\n", "doc_id": "f27af1b0-289b-4bcf-ba90-f884269b96ab", "embedding": null, "doc_hash": "56cf493bb94233f90ecae58a9b16e21178cd763073cc8fed7fd030ae0987835a", "extra_info": null, "node_info": {"start": 1902, "end": 2895}, "relationships": {"1": "f0647966-728c-4e9e-bd38-6b40800ace6b", "2": "2e4eaf95-40c6-4d19-9037-8a7d8df08394"}}, "__type__": "1"}, "504b7268-6525-4eec-b932-ccb5ccc54132": {"__data__": {"text": "schema {\n  query: Query\n}\n\n\"\"\"The `BigInt` scalar type represents non-fractional signed whole numeric values.\"\"\"\nscalar BigInt\n\ninterface Collection {\n  address: String!\n  description: String\n  name: String\n  symbol: String\n  circulatingSupply: BigInt\n  totalSupply: BigInt\n  slug: String\n  externalUrl: String\n  twitterUsername: String\n  baseTokenUri: String\n  contract: NFTContract\n  ohlcvChart(filter: CollectionOhlcvChartInput): [CollectionOHLCVChart!]\n  holders(before: String, after: String, first: Int, last: Int): CollectionHoldersConnection!\n  wallets(before: String, after: String, first: Int, last: Int): CollectionWalletsConnection!\n  attributes(before: String, after: String, first: Int, last: Int): CollectionAttributesConnection\n  orderHistory(filter: CollectionOrderHistoryInput): [CollectionOrderHistory!]\n  openseaMetadata: OpenSeaMetadata\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): CollectionTokenEventsConnection!\n  \"\"\"The collection image.\"\"\"\n  image: [TokenUpload!]\n  \"\"\"Collection banner image.\"\"\"\n  bannerImage: [TokenUpload!]\n}\n\n\"\"\"A contract's attribute count\"\"\"\ntype CollectionAttribute {\n  \"\"\"The trait key.\"\"\"\n  name: String!\n  \"\"\"The value of the trait.\"\"\"\n  value: String\n}\n\ntype CollectionAttributesConnection {\n  pageInfo: PageInfo!\n  edges: [CollectionAttributesConnectionEdge!]!\n  totalCount: Int\n}\n\ntype CollectionAttributesConnectionEdge {\n  node: CollectionAttribute!\n  cursor: String!\n}\n\ntype CollectionHoldersConnection {\n  pageInfo: PageInfo!\n  edges: [CollectionHoldersConnectionEdge!]!\n  totalCount: Int\n}\n\ntype CollectionHoldersConnectionEdge {\n  node: NFTWallet!\n  cursor: String!\n}\n\n\"\"\"Collection OHLCV chart stats\"\"\"\ntype CollectionOHLCVChart {\n  average: Float\n  close: Float\n  count: Float!\n  high: Float\n  low: Float\n  open: Float\n  volume: Float\n  timestamp: DateTime!\n}\n\ninput CollectionOhlcvChartInput {\n  confirmedAtGte: DateTime\n  confirmedAtLte: DateTime\n  interval: CollectionOHLCVChartInterval\n  limit: Float\n}\n\n\"\"\"Filter by input interval\"\"\"\nenum CollectionOHLCVChartInterval {\n  ONE_MINUTE\n  FIVE_MINUTES\n  FIFTEEN_MINUTES\n  THIRTY_MINUTES\n  ONE_HOUR\n  SIX_HOURS\n  TWELVE_HOURS\n  ONE_DAY\n  SEVEN_DAYS\n  THIRTY_DAYS\n}\n\n\"\"\"Collection order history summary\"\"\"\ntype CollectionOrderHistory {\n  fromAddress: String!\n  toAddress: String!\n  priceInEth: Float!\n  timestamp: DateTime!\n  transactionHash: String!\n  tokenId: String\n}\n\ninput CollectionOrderHistoryInput {\n  confirmedAtGte: DateTime\n  confirmedAtLte: DateTime\n  isLimited: Boolean\n}\n\n\"\"\"Sale of a collection token\"\"\"\ntype CollectionSale {\n  estimatedConfirmedAt: DateTime\n  priceInEth: Float\n}\n\n\"\"\"Filter input for collections\"\"\"\ninput CollectionsFilterInput {\n  address: StringInput\n  ercStandard: CollectionStandardInput\n}\n\nenum CollectionStandard {\n  ERC1155\n  ERC721\n}\n\ninput CollectionStandardInput {\n  eq: CollectionStandard\n  in: [CollectionStandard!]\n  notIn: [CollectionStandard!]\n}\n\n\"\"\"Stats of a collection\"\"\"\ntype CollectionStats {\n  average: Float\n  ceiling: Float\n  floor: Float\n  totalSales: Int\n  volume: Float\n}\n\ntype CollectionTokenEventsConnection {\n  pageInfo: PageInfo!\n  edges: [CollectionTokenEventsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype CollectionTokenEventsConnectionEdge {\n  node: TokenEvent!\n  cursor: String!\n}\n\ntype CollectionWalletsConnection {\n  pageInfo:", "doc_id": "504b7268-6525-4eec-b932-ccb5ccc54132", "embedding": null, "doc_hash": "757866c01015c959e47ca4c24aa6c0696c6bd2e88d353aeadff2969908f57a14", "extra_info": null, "node_info": {"start": 0, "end": 3362}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "3": "a1807149-d27c-4090-95d7-a79f0fbd237d"}}, "__type__": "1"}, "a1807149-d27c-4090-95d7-a79f0fbd237d": {"__data__": {"text": "input for collections\"\"\"\ninput CollectionsFilterInput {\n  address: StringInput\n  ercStandard: CollectionStandardInput\n}\n\nenum CollectionStandard {\n  ERC1155\n  ERC721\n}\n\ninput CollectionStandardInput {\n  eq: CollectionStandard\n  in: [CollectionStandard!]\n  notIn: [CollectionStandard!]\n}\n\n\"\"\"Stats of a collection\"\"\"\ntype CollectionStats {\n  average: Float\n  ceiling: Float\n  floor: Float\n  totalSales: Int\n  volume: Float\n}\n\ntype CollectionTokenEventsConnection {\n  pageInfo: PageInfo!\n  edges: [CollectionTokenEventsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype CollectionTokenEventsConnectionEdge {\n  node: TokenEvent!\n  cursor: String!\n}\n\ntype CollectionWalletsConnection {\n  pageInfo: PageInfo!\n  edges: [CollectionWalletsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype CollectionWalletsConnectionEdge {\n  node: Wallet!\n  cursor: String!\n}\n\ninterface Contract {\n  abi: JSON\n  address: String!\n  name: String\n  symbol: String\n  supportedErcInterfaces: [String!]\n  \"\"\"Contract with verified ABI\"\"\"\n  isVerified: Boolean\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): ContractTokenEventsConnection!\n}\n\ntype ContractsConnection {\n  pageInfo: PageInfo!\n  edges: [ContractsEdge!]!\n  totalCount: Int\n}\n\ntype ContractsEdge {\n  node: Contract!\n  cursor: String!\n}\n\n\"\"\"Filter input for contracts\"\"\"\ninput ContractsFilterInput {\n  address: StringInput\n}\n\ntype ContractTokenEventsConnection {\n  pageInfo: PageInfo!\n  edges: [ContractTokenEventsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype ContractTokenEventsConnectionEdge {\n  node: TokenEvent!\n  cursor: String!\n}\n\n\"\"\"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.\"\"\"\nscalar DateTime\n\ninput DateTimeInput {\n  eq: DateTime\n  gt: DateTime\n  gte: DateTime\n  lt: DateTime\n  lte: DateTime\n}\n\ntype ERC1155Collection implements Collection {\n  address: String!\n  description: String\n  name: String\n  symbol: String\n  circulatingSupply: BigInt\n  totalSupply: BigInt\n  slug: String\n  externalUrl: String\n  twitterUsername: String\n  baseTokenUri: String\n  contract: NFTContract\n  ohlcvChart(filter: CollectionOhlcvChartInput): [CollectionOHLCVChart!]\n  holders(before: String, after: String, first: Int, last: Int): CollectionHoldersConnection!\n  wallets(before: String, after: String, first: Int, last: Int): CollectionWalletsConnection!\n  attributes(before: String, after: String, first: Int, last: Int): CollectionAttributesConnection\n  orderHistory(filter: CollectionOrderHistoryInput): [CollectionOrderHistory!]\n  openseaMetadata: OpenSeaMetadata\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): CollectionTokenEventsConnection!\n  \"\"\"The collection image.\"\"\"\n  image: [TokenUpload!]\n  \"\"\"Collection banner image.\"\"\"\n  bannerImage: [TokenUpload!]\n  nft(tokenId: String!): ERC1155NFT\n  nfts(filter: NFTsFilterInput, before: String, after: String, first: Int, last: Int): ERC1155CollectionTokensConnection!\n}\n\ntype ERC1155CollectionTokensConnection {\n  pageInfo: PageInfo!\n  edges: [ERC1155CollectionTokensEdge!]!\n  totalCount: Int\n}\n\ntype ERC1155CollectionTokensEdge {\n  node: ERC1155NFT!\n  cursor: String!\n}\n\ntype ERC1155NFT implements NFT {\n  contractAddress: String!\n  name: String\n ", "doc_id": "a1807149-d27c-4090-95d7-a79f0fbd237d", "embedding": null, "doc_hash": "2dc6a998d6db5ac60d12b0d7732fb8edfd3a5e4d05317b0541e83e73dfaa7f62", "extra_info": null, "node_info": {"start": 2747, "end": 6156}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "504b7268-6525-4eec-b932-ccb5ccc54132", "3": "026924b9-89ca-4417-8efa-83df728577ab"}}, "__type__": "1"}, "026924b9-89ca-4417-8efa-83df728577ab": {"__data__": {"text": "first: Int, last: Int): CollectionTokenEventsConnection!\n  \"\"\"The collection image.\"\"\"\n  image: [TokenUpload!]\n  \"\"\"Collection banner image.\"\"\"\n  bannerImage: [TokenUpload!]\n  nft(tokenId: String!): ERC1155NFT\n  nfts(filter: NFTsFilterInput, before: String, after: String, first: Int, last: Int): ERC1155CollectionTokensConnection!\n}\n\ntype ERC1155CollectionTokensConnection {\n  pageInfo: PageInfo!\n  edges: [ERC1155CollectionTokensEdge!]!\n  totalCount: Int\n}\n\ntype ERC1155CollectionTokensEdge {\n  node: ERC1155NFT!\n  cursor: String!\n}\n\ntype ERC1155NFT implements NFT {\n  contractAddress: String!\n  name: String\n  tokenId: BigInt!\n  animationUrl: String\n  externalUrl: String\n  metadata: JSONObject\n  collectionSlug: String\n  description: String\n  contract: NFTContract\n  collection: ERC1155Collection\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): NFTTokenEventsConnection!\n  \"\"\"The uploads of a token.\"\"\"\n  uploads: [TokenUpload!]\n  holders(before: String, after: String, first: Int, last: Int): ERC1155NFTHoldersConnection! @deprecated(reason: \"Use nft.wallets instead\")\n  wallets(before: String, after: String, first: Int, last: Int): ERC1155NFTWalletsConnection!\n}\n\ntype ERC1155NFTHoldersConnection {\n  pageInfo: PageInfo!\n  edges: [ERC1155NFTHoldersConnectionEdge!]!\n  totalCount: Int\n}\n\ntype ERC1155NFTHoldersConnectionEdge {\n  node: NFTWallet!\n  cursor: String!\n}\n\ntype ERC1155NFTWalletsConnection {\n  pageInfo: PageInfo!\n  edges: [ERC1155NFTWalletsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype ERC1155NFTWalletsConnectionEdge {\n  node: Wallet!\n  cursor: String!\n}\n\ntype ERC721Collection implements Collection {\n  address: String!\n  description: String\n  name: String\n  symbol: String\n  circulatingSupply: BigInt\n  totalSupply: BigInt\n  slug: String\n  externalUrl: String\n  twitterUsername: String\n  baseTokenUri: String\n  contract: NFTContract\n  ohlcvChart(filter: CollectionOhlcvChartInput): [CollectionOHLCVChart!]\n  holders(before: String, after: String, first: Int, last: Int): CollectionHoldersConnection!\n  wallets(before: String, after: String, first: Int, last: Int): CollectionWalletsConnection!\n  attributes(before: String, after: String, first: Int, last: Int): CollectionAttributesConnection\n  orderHistory(filter: CollectionOrderHistoryInput): [CollectionOrderHistory!]\n  openseaMetadata: OpenSeaMetadata\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): CollectionTokenEventsConnection!\n  \"\"\"The collection image.\"\"\"\n  image: [TokenUpload!]\n  \"\"\"Collection banner image.\"\"\"\n  bannerImage: [TokenUpload!]\n  stats(filter: ERC721CollectionStatsInput): CollectionStats\n  nft(tokenId: String!): ERC721NFT\n  nfts(filter: NFTsFilterInput, before: String, after: String, first: Int, last: Int): ERC721CollectionTokensConnection!\n}\n\ninput ERC721CollectionStatsInput {\n  timeRange: DateTimeInput\n}\n\ntype ERC721CollectionTokensConnection {\n  pageInfo: PageInfo!\n  edges: [ERC721CollectionTokensEdge!]!\n  totalCount: Int\n}\n\ntype ERC721CollectionTokensEdge {\n  node: ERC721NFT!\n  cursor: String!\n}\n\ntype ERC721NFT implements NFT {\n  contractAddress: String!\n  name: String\n  tokenId: BigInt!\n  animationUrl: String\n  externalUrl: String\n  metadata: JSONObject\n  collectionSlug:", "doc_id": "026924b9-89ca-4417-8efa-83df728577ab", "embedding": null, "doc_hash": "2bc196aab90155c1be9f9ca8e44807dd2a69a21889df380de7ef2de3dddd5ed9", "extra_info": null, "node_info": {"start": 6225, "end": 9514}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "a1807149-d27c-4090-95d7-a79f0fbd237d", "3": "d83abcb6-a23d-40d3-a959-4f6441f4fb4f"}}, "__type__": "1"}, "d83abcb6-a23d-40d3-a959-4f6441f4fb4f": {"__data__": {"text": "nft(tokenId: String!): ERC721NFT\n  nfts(filter: NFTsFilterInput, before: String, after: String, first: Int, last: Int): ERC721CollectionTokensConnection!\n}\n\ninput ERC721CollectionStatsInput {\n  timeRange: DateTimeInput\n}\n\ntype ERC721CollectionTokensConnection {\n  pageInfo: PageInfo!\n  edges: [ERC721CollectionTokensEdge!]!\n  totalCount: Int\n}\n\ntype ERC721CollectionTokensEdge {\n  node: ERC721NFT!\n  cursor: String!\n}\n\ntype ERC721NFT implements NFT {\n  contractAddress: String!\n  name: String\n  tokenId: BigInt!\n  animationUrl: String\n  externalUrl: String\n  metadata: JSONObject\n  collectionSlug: String\n  description: String\n  contract: NFTContract\n  collection: ERC721Collection\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): NFTTokenEventsConnection!\n  \"\"\"The uploads of a token.\"\"\"\n  uploads: [TokenUpload!]\n  holder: NFTWallet @deprecated(reason: \"Use nft.wallet instead\")\n  wallet: Wallet\n  \"\"\"The attributes of the token.\"\"\"\n  attributes: [TokenAttribute!]\n}\n\nenum ERCStandard {\n  ERC20\n  ERC721\n  ERC1155\n}\n\ntype EVMSchemaType {\n  trendingCollections(\n    filter: TrendingCollectionsFilterInput\n    orderBy: TrendingOrderBy\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): EVMSchemaTypeTrendingCollectionsConnection!\n  walletByENS(ensName: String!): Wallet\n  walletByAddress(address: String!): Wallet\n  contracts(filter: ContractsFilterInput, before: String, after: String, first: Int, last: Int): ContractsConnection!\n  contract(contractAddress: String!): Contract\n  collections(filter: CollectionsFilterInput, before: String, after: String, first: Int, last: Int): EVMSchemaTypeCollectionsConnection!\n  collection(contractAddress: String!): Collection\n  nft(\n    \"\"\"The address of the contract that the nft is under\"\"\"\n    contractAddress: String!\n    \"\"\"The id of the nft\"\"\"\n    tokenId: String!\n  ): NFT\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): EVMSchemaTypeTokenEventsConnection!\n}\n\ntype EVMSchemaTypeCollectionsConnection {\n  pageInfo: PageInfo!\n  edges: [EVMSchemaTypeCollectionsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype EVMSchemaTypeCollectionsConnectionEdge {\n  node: Collection!\n  cursor: String!\n}\n\ntype EVMSchemaTypeTokenEventsConnection {\n  pageInfo: PageInfo!\n  edges: [EVMSchemaTypeTokenEventsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype EVMSchemaTypeTokenEventsConnectionEdge {\n  node: TokenEvent!\n  cursor: String!\n}\n\ntype EVMSchemaTypeTrendingCollectionsConnection {\n  pageInfo: PageInfo!\n  edges: [EVMSchemaTypeTrendingCollectionsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype EVMSchemaTypeTrendingCollectionsConnectionEdge {\n  node: TrendingCollection!\n  cursor: String!\n}\n\ninput IntegerInput {\n  eq: Int\n  gt: Int\n  gte: Int\n  in: [Int!]\n  lt: Int\n  lte: Int\n}\n\n\"\"\"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\"\"\"\nscalar JSON\n\n\"\"\"The `JSONObject` scalar type represents JSON objects as specified by", "doc_id": "d83abcb6-a23d-40d3-a959-4f6441f4fb4f", "embedding": null, "doc_hash": "a5de9ee937e632437b9c9330025a7ce9dffde9ce9412a3cd14912df79a443665", "extra_info": null, "node_info": {"start": 9528, "end": 12707}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "026924b9-89ca-4417-8efa-83df728577ab", "3": "728c9b5d-d59a-4f92-9c0f-9b00000d0a4b"}}, "__type__": "1"}, "728c9b5d-d59a-4f92-9c0f-9b00000d0a4b": {"__data__": {"text": "EVMSchemaTypeTrendingCollectionsConnection {\n  pageInfo: PageInfo!\n  edges: [EVMSchemaTypeTrendingCollectionsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype EVMSchemaTypeTrendingCollectionsConnectionEdge {\n  node: TrendingCollection!\n  cursor: String!\n}\n\ninput IntegerInput {\n  eq: Int\n  gt: Int\n  gte: Int\n  in: [Int!]\n  lt: Int\n  lte: Int\n}\n\n\"\"\"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\"\"\"\nscalar JSON\n\n\"\"\"The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\"\"\"\nscalar JSONObject\n\ninterface NFT {\n  contractAddress: String!\n  name: String\n  tokenId: BigInt!\n  animationUrl: String\n  externalUrl: String\n  metadata: JSONObject\n  collectionSlug: String\n  description: String\n  contract: NFTContract\n  collection: Collection\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): NFTTokenEventsConnection!\n  \"\"\"The uploads of a token.\"\"\"\n  uploads: [TokenUpload!]\n}\n\ntype NFTContract implements Contract {\n  abi: JSON\n  address: String!\n  name: String\n  symbol: String\n  supportedErcInterfaces: [String!]\n  \"\"\"Contract with verified ABI\"\"\"\n  isVerified: Boolean\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): ContractTokenEventsConnection!\n  collection: Collection\n}\n\ninput NFTsFilterInput {\n  contractAddressIn: [String!]\n}\n\ntype NFTTokenEventsConnection {\n  pageInfo: PageInfo!\n  edges: [NFTTokenEventsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype NFTTokenEventsConnectionEdge {\n  node: TokenEvent!\n  cursor: String!\n}\n\ntype NFTWallet {\n  walletAddress: String\n  owner: Wallet\n}\n\n\"\"\"Metadata provided by opensea\"\"\"\ntype OpenSeaMetadata {\n  \"\"\"Slug provided by Opensea (it might be stale).\"\"\"\n  unsafeSlug: String\n  \"\"\"Collection verified by Opensea.\"\"\"\n  isVerified: Boolean\n  \"\"\"Collection is hidden on Opensea.\"\"\"\n  isHidden: Boolean\n}\n\n\"\"\"Sort ascending (A-Z) or descending (Z-A)\"\"\"\nenum OrderDirection {\n  ASC\n  DESC\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  ethereum: EVMSchemaType!\n  ethereumSepolia: EVMSchemaType!\n  polygon: EVMSchemaType!\n}\n\ninput StringInput {\n  eq: String\n  in: [String!]\n  notIn: [String!]\n}\n\n\"\"\"A token attribute\"\"\"\ntype TokenAttribute {\n  \"\"\"Attribute name\"\"\"\n  name: String!\n  \"\"\"Attribute value\"\"\"\n  value: String!\n}\n\ntype TokenBurnEvent implements TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n  fromAddress: String!\n  toAddress: String!\n  contractAddress: String!\n  contractERCStandard: ERCStandard\n  tokenId: BigInt\n  tokenQuantity: BigInt!\n}\n\ntype TokenContract implements Contract {\n  abi: JSON\n  address: String!\n  name: String\n  symbol: String\n  supportedErcInterfaces: [String!]\n  \"\"\"Contract with verified ABI\"\"\"\n  isVerified: Boolean\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last:", "doc_id": "728c9b5d-d59a-4f92-9c0f-9b00000d0a4b", "embedding": null, "doc_hash": "f9ed902ef11cf701585438a6d43ae55fc5c00a33cb60a6a415ecfaa9803fc60c", "extra_info": null, "node_info": {"start": 12722, "end": 15899}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "d83abcb6-a23d-40d3-a959-4f6441f4fb4f", "3": "5056dcb0-81b4-47b8-9d8c-0d373d2e9dd8"}}, "__type__": "1"}, "5056dcb0-81b4-47b8-9d8c-0d373d2e9dd8": {"__data__": {"text": " \"\"\"Attribute value\"\"\"\n  value: String!\n}\n\ntype TokenBurnEvent implements TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n  fromAddress: String!\n  toAddress: String!\n  contractAddress: String!\n  contractERCStandard: ERCStandard\n  tokenId: BigInt\n  tokenQuantity: BigInt!\n}\n\ntype TokenContract implements Contract {\n  abi: JSON\n  address: String!\n  name: String\n  symbol: String\n  supportedErcInterfaces: [String!]\n  \"\"\"Contract with verified ABI\"\"\"\n  isVerified: Boolean\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): ContractTokenEventsConnection!\n  decimals: BigInt\n  details: TokenDetailsType\n}\n\ntype TokenDetailsType {\n  address: String!\n  name: String\n  symbol: String\n  slug: String\n}\n\ninterface TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n}\n\n\"\"\"Filter input for token events\"\"\"\ninput TokenEventsFilterInput {\n  \"\"\"Filter token events by their block number\"\"\"\n  blockNumber: IntegerInput\n  \"\"\"Filter token events by their estimated confirmation date\"\"\"\n  timestamp: DateTimeInput\n  \"\"\"Filter token events by the \"from\" wallet\"\"\"\n  fromAddress: StringInput\n  \"\"\"Filter token events by the \"to\" wallet\"\"\"\n  toAddress: StringInput\n  \"\"\"Filter token events by the \"to\" and \"from\" wallet\"\"\"\n  walletAddress: StringInput\n  \"\"\"Filter token events by contract address\"\"\"\n  contractAddress: StringInput\n  \"\"\"Filter token events by their type\"\"\"\n  type: TokenTransferType\n  \"\"\"Filter token events by their type\"\"\"\n  typeIn: [TokenTransferType!]\n}\n\ntype TokenMintEvent implements TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n  fromAddress: String!\n  toAddress: String!\n  contractAddress: String!\n  contractERCStandard: ERCStandard\n  tokenId: BigInt\n  tokenQuantity: BigInt!\n}\n\ntype TokenSaleEvent implements TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n  fromAddress: String!\n  toAddress: String!\n  sentTokenContractAddress: String!\n  sentTokenContractERCStandard: ERCStandard\n  sentTokenId: BigInt\n  sentTokenQuantity: BigInt!\n  receivedTokenContractAddress: String\n  receivedTokenId: BigInt\n  receivedTokenQuantity: BigInt\n}\n\ntype TokenSwapEvent implements TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n  fromAddress: String!\n  toAddress: String!\n  sentTokenContractAddress: String!\n  sentTokenContractERCStandard: ERCStandard\n  sentTokenId: BigInt\n  sentTokenQuantity: BigInt!\n  receivedTokenContractAddress: String\n  receivedTokenId: BigInt\n  receivedTokenQuantity: BigInt\n}\n\ntype TokenTransferEvent implements TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n  fromAddress: String!\n  toAddress: String!\n  contractAddress: String!\n  contractERCStandard: ERCStandard\n  tokenId: BigInt\n  tokenQuantity: BigInt!\n}\n\nenum TokenTransferType {\n  TRANSFER\n  MINT\n  SALE\n  SWAP\n  BURN\n}\n\n\"\"\"Token media uploads.\"\"\"\ntype TokenUpload {\n  \"\"\"The upload mimeType.\"\"\"\n  mimeType: String\n  \"\"\"The upload height.\"\"\"\n  height: Float\n", "doc_id": "5056dcb0-81b4-47b8-9d8c-0d373d2e9dd8", "embedding": null, "doc_hash": "bdec57b9c59fa3d286d704cd90654d3833b37a234fd2f4a8f302fcc803a73326", "extra_info": null, "node_info": {"start": 15828, "end": 19368}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "728c9b5d-d59a-4f92-9c0f-9b00000d0a4b", "3": "2d73b640-6d32-48f6-9735-b79ee84b876a"}}, "__type__": "1"}, "2d73b640-6d32-48f6-9735-b79ee84b876a": {"__data__": {"text": " receivedTokenContractAddress: String\n  receivedTokenId: BigInt\n  receivedTokenQuantity: BigInt\n}\n\ntype TokenTransferEvent implements TokenEvent {\n  blockNumber: Int!\n  transactionHash: String\n  transferIndex: Int!\n  timestamp: DateTime!\n  type: TokenTransferType!\n  transaction: Transaction\n  fromAddress: String!\n  toAddress: String!\n  contractAddress: String!\n  contractERCStandard: ERCStandard\n  tokenId: BigInt\n  tokenQuantity: BigInt!\n}\n\nenum TokenTransferType {\n  TRANSFER\n  MINT\n  SALE\n  SWAP\n  BURN\n}\n\n\"\"\"Token media uploads.\"\"\"\ntype TokenUpload {\n  \"\"\"The upload mimeType.\"\"\"\n  mimeType: String\n  \"\"\"The upload height.\"\"\"\n  height: Float\n  \"\"\"The upload width.\"\"\"\n  width: Float\n  \"\"\"The upload url.\"\"\"\n  url: String!\n}\n\ntype Transaction {\n  blockNumber: Int!\n  blockTimestamp: DateTime!\n  contractAddress: String\n  fromAddress: String!\n  cumulativeGasUsed: BigInt!\n  effectiveGasPrice: BigInt\n  \"\"\"The amount of gas supplied for this transaction to happen\"\"\"\n  gas: BigInt\n  \"\"\"Cost in Gwei per unit of gas for this transaction\"\"\"\n  gasPrice: BigInt\n  \"\"\"The amount of gas used by this transaction\"\"\"\n  gasUsed: BigInt!\n  hash: String!\n  \"\"\"Max gas fee in Gwei\"\"\"\n  maxFeePerGas: BigInt\n  \"\"\"Max gas priority fee in Gwei\"\"\"\n  maxPriorityFeePerGas: BigInt\n  toAddress: String\n  type: String\n  input: String\n  transactionIndex: Int!\n  value: BigInt\n}\n\n\"\"\"Filter input for transactions\"\"\"\ninput TransactionsFilterInput {\n  blockNumber: IntegerInput\n  timestamp: DateTimeInput\n  fromAddress: String\n  toAddress: String\n}\n\ntype TrendingCollection {\n  collection: Collection\n  last20Sales: [CollectionSale!]\n  stats: TrendingCollectionStats\n}\n\n\"\"\"Filter input for trending collections\"\"\"\ninput TrendingCollectionsFilterInput {\n  \"\"\"Custom time range in which to filter trending collections by. Available only to paid customers.\"\"\"\n  timeRange: DateTimeInput\n  \"\"\"A time period relative to the current time in which to filter trending collections by.\"\"\"\n  timePeriod: TrendingPeriod\n}\n\n\"\"\"Stats of a trending collection\"\"\"\ntype TrendingCollectionStats {\n  average: Float\n  ceiling: Float\n  floor: Float\n  totalSales: Float\n  volume: Float\n}\n\nenum TrendingOrderBy {\n  AVERAGE\n  SALES\n  VOLUME\n}\n\nenum TrendingPeriod {\n  ONE_MINUTE\n  FIVE_MINUTES\n  FIFTEEN_MINUTES\n  THIRTY_MINUTES\n  ONE_HOUR\n  TWELVE_HOURS\n  ONE_DAY\n  SEVEN_DAYS\n}\n\ntype Wallet {\n  address: String!\n  ensName: String\n  heldCollection(collectionAddress: String!): WalletCollection @deprecated(reason: \"Use wallet.collection instead.\")\n  heldCollections(\n    orderBy: WalletCollectionOrderBy\n    filter: WalletCollectionsFilterInput\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletHeldCollectionsConnection! @deprecated(reason: \"Use wallet.collections instead.\")\n  walletCollection(collectionAddress: String!): WalletCollection\n  walletCollections(\n    orderBy: WalletCollectionOrderBy\n    filter: WalletCollectionsFilterInput\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletWalletCollectionsConnection!\n  tokenEvents(filter: TokenEventsFilterInput, before:", "doc_id": "2d73b640-6d32-48f6-9735-b79ee84b876a", "embedding": null, "doc_hash": "59fc096ef6a0c7b67045d156a95407a95ca8b267269bb1afd80a95cc7cdbebfc", "extra_info": null, "node_info": {"start": 19392, "end": 22703}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "5056dcb0-81b4-47b8-9d8c-0d373d2e9dd8", "3": "9a1660c9-27dd-4152-8757-8a01c6991441"}}, "__type__": "1"}, "9a1660c9-27dd-4152-8757-8a01c6991441": {"__data__": {"text": "Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletHeldCollectionsConnection! @deprecated(reason: \"Use wallet.collections instead.\")\n  walletCollection(collectionAddress: String!): WalletCollection\n  walletCollections(\n    orderBy: WalletCollectionOrderBy\n    filter: WalletCollectionsFilterInput\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletWalletCollectionsConnection!\n  tokenEvents(filter: TokenEventsFilterInput, before: String, after: String, first: Int, last: Int): WalletTokenEventsConnection!\n  transactions(filter: TransactionsFilterInput, before: String, after: String, first: Int, last: Int): WalletTransactionsConnection!\n  heldNft(contractAddress: String!, tokenId: String!): WalletNFT @deprecated(reason: \"Use wallet.nft instead.\")\n  heldNfts(\n    orderBy: WalletNFTsOrderBy\n    filter: WalletNFTsFilterInput\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletHeldNFTsConnection! @deprecated(reason: \"Use wallet.nfts instead.\")\n  walletNFT(contractAddress: String!, tokenId: String!): WalletNFT\n  walletNFTs(\n    orderBy: WalletNFTsOrderBy\n    filter: WalletNFTsFilterInput\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletNFTsConnection!\n  heldTokenBalances(\n    orderBy: WalletTokenBalanceOrder\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletHeldTokenBalancesConnection! @deprecated(reason: \"Use wallet.tokenBalances instead.\")\n  tokenBalances(\n    orderBy: WalletTokenBalanceOrder\n    \"\"\"The direction you want to order results: ASC/DESC. Defaults to DESC.\"\"\"\n    orderDirection: OrderDirection\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): WalletTokenBalancesConnection!\n}\n\ntype WalletCollection {\n  collectionAddress: String\n  nftsCount: BigInt!\n  heldTokensCount: BigInt! @deprecated(reason: \"Use nftsCount instead.\")\n  collection: Collection\n}Walle\n\nenum WalletCollectionOrderBy {\n  DATE_ACQUIRED\n  NAME\n}\n\n\"\"\"Filter of collections in a wallet\"\"\"\ninput WalletCollectionsFilterInput {\n  contractAddressIn: [String!]\n}\n\ntype WalletHeldCollectionsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletHeldCollectionsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletHeldCollectionsConnectionEdge {\n  node: WalletCollection!\n  cursor: String!\n}\n\ntype WalletHeldNFTsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletHeldNFTsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletHeldNFTsConnectionEdge {\n  node: WalletNFT!\n  cursor: String!\n}\n\ntype WalletHeldTokenBalancesConnection {\n  pageInfo: PageInfo!\n  edges: [WalletHeldTokenBalancesConnectionEdge!]!\n  totalCount: Int\n}\n\ntype", "doc_id": "9a1660c9-27dd-4152-8757-8a01c6991441", "embedding": null, "doc_hash": "bdf77728bf1d5e0eb54e9e32325f7f2838667cf2e4a0c7436f5664562a8effda", "extra_info": null, "node_info": {"start": 22718, "end": 25889}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "2d73b640-6d32-48f6-9735-b79ee84b876a", "3": "4bb8fa8e-b246-4c21-84da-71b5b9b15115"}}, "__type__": "1"}, "4bb8fa8e-b246-4c21-84da-71b5b9b15115": {"__data__": {"text": "{\n  contractAddressIn: [String!]\n}\n\ntype WalletHeldCollectionsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletHeldCollectionsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletHeldCollectionsConnectionEdge {\n  node: WalletCollection!\n  cursor: String!\n}\n\ntype WalletHeldNFTsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletHeldNFTsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletHeldNFTsConnectionEdge {\n  node: WalletNFT!\n  cursor: String!\n}\n\ntype WalletHeldTokenBalancesConnection {\n  pageInfo: PageInfo!\n  edges: [WalletHeldTokenBalancesConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletHeldTokenBalancesConnectionEdge {\n  node: WalletTokenBalance!\n  cursor: String!\n}\n\ntype WalletNFT {\n  nftsCount: Int\n  heldNftCount: Int @deprecated(reason: \"Use nftsCount instead.\")\n  nft: NFT\n}\n\ntype WalletNFTsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletNFTsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletNFTsConnectionEdge {\n  node: WalletNFT!\n  cursor: String!\n}\n\n\"\"\"Filter of nfts in a wallet\"\"\"\ninput WalletNFTsFilterInput {\n  contractAddressIn: [String!]\n}\n\nenum WalletNFTsOrderBy {\n  DATE_ACQUIRED\n  NAME\n}\n\ntype WalletTokenBalance {\n  totalBalance: BigInt!\n  contractAddress: String!\n  contract: TokenContract\n}\n\n\"\"\"Sort wallet token balance\"\"\"\nenum WalletTokenBalanceOrder {\n  TOTAL_BALANCE\n  NAME\n  SYMBOL\n  CONTRACT_ADDRESS\n}\n\ntype WalletTokenBalancesConnection {\n  pageInfo: PageInfo!\n  edges: [WalletTokenBalancesConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletTokenBalancesConnectionEdge {\n  node: WalletTokenBalance!\n  cursor: String!\n}\n\ntype WalletTokenEventsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletTokenEventsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletTokenEventsConnectionEdge {\n  node: TokenEvent!\n  cursor: String!\n}\n\ntype WalletTransactionsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletTransactionsEdge!]!\n  totalCount: Int\n}\n\ntype WalletTransactionsEdge {\n  node: Transaction!\n  cursor: String!\n}\n\ntype WalletWalletCollectionsConnection {\n  pageInfo: PageInfo!\n  edges: [WalletWalletCollectionsConnectionEdge!]!\n  totalCount: Int\n}\n\ntype WalletWalletCollectionsConnectionEdge {\n  node: WalletCollection!\n  cursor: String!\n}", "doc_id": "4bb8fa8e-b246-4c21-84da-71b5b9b15115", "embedding": null, "doc_hash": "700c4a369ee9720a4223bdca347a2ecdc652a38dbfa4789e9883d32c554d2171", "extra_info": null, "node_info": {"start": 25856, "end": 28033}, "relationships": {"1": "67022844-37dd-4c79-905f-77d53592fcb1", "2": "9a1660c9-27dd-4152-8757-8a01c6991441"}}, "__type__": "1"}}}